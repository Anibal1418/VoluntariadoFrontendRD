@using VoluntariosConectadosRD.Models.DTOs
@{
    ViewData["Title"] = "Registro de Impacto - Voluntariado Conectado RD";
    Layout = "_DashboardLayout";
    var adminStats = ViewBag.AdminStats as AdminStatsDto;
    var volunteersData = ViewBag.VolunteersData as PaginatedResult<AdminVolunteerDto>;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var pageSize = ViewBag.PageSize as int? ?? 5;
    var searchQuery = ViewBag.SearchQuery as string;
    var hasStats = adminStats != null;
    var hasVolunteers = volunteersData != null && volunteersData.Items.Any();
}

<div class="dashboard-bg py-4" style="background:#f6f8fa; min-height:100vh;">
    <div class="container">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="dashboard-title mb-0" style="font-size:2.2rem; font-weight:700; color:#fff; background:linear-gradient(135deg, #7db9e8, #5a9bd4); border-radius:12px; padding:18px 32px; box-shadow: 0 4px 15px rgba(125, 185, 232, 0.3);">REGISTRO DE IMPACTO</h2>
            <a href="/Dashboard/ProfileONG" class="btn btn-outline-primary back-btn">
                <i class="bi bi-arrow-left me-2"></i>Volver al Dashboard
            </a>
        </div>
        
        <!-- Main Content Card -->
        <div class="card" style="border-radius:16px; border: none; box-shadow: 0 2px 12px rgba(0,0,0,0.07);">
            <div class="card-body p-4">
                <!-- Search and Header Row -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="mb-0" style="font-weight: 700; color: #2c3e50;">Estado de Voluntarios</h4>
                    <div class="d-flex align-items-center gap-3">
                        <!-- Search Box -->
                        <form method="get" action="@Url.Action("Reportes")" class="d-flex">
                            <div class="position-relative me-2">
                                <input type="text" name="search" value="@searchQuery" class="form-control search-input" placeholder="Buscar voluntario" style="border-radius: 12px; padding-left: 45px; border: 2px solid #e9ecef; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
                                <i class="bi bi-search position-absolute search-icon" style="left: 15px; top: 50%; transform: translateY(-50%); color: #7db9e8; font-size: 1.1rem;"></i>
                                <input type="hidden" name="page" value="1">
                                <input type="hidden" name="pageSize" value="@pageSize">
                            </div>
                            <button type="submit" class="btn btn-primary">Buscar</button>
                            @if (!string.IsNullOrEmpty(searchQuery))
                            {
                                <a href="@Url.Action("Reportes", new { page = 1, pageSize = pageSize })" class="btn btn-outline-secondary ms-2">Limpiar</a>
                            }
                        </form>
                    </div>
                </div>
                
                <!-- Volunteers Table -->
                <div class="table-responsive">
                    @if (!hasVolunteers)
                    {
                        <div class="alert alert-info" role="alert">
                            <h5 class="alert-heading">Sin Datos Disponibles</h5>
                            <p class="mb-0">No se encontraron voluntarios en la base de datos o no se pudo conectar con el servidor.</p>
                        </div>
                    }
                    
                    <table class="table table-borderless volunteers-table">
                        <thead>
                            <tr>
                                <th>Voluntario</th>
                                <th>Organización</th>
                                <th>Teléfono</th>
                                <th>Email</th>
                                <th>País</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody id="volunteersTableBody">
                            @if (hasVolunteers)
                            {
                                @foreach (var volunteer in volunteersData.Items)
                                {
                                    <tr class="volunteer-row" data-volunteer-id="@volunteer.Id">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@(volunteer.ImagenUrl ?? "/images/default-avatar.png")" alt="Foto de perfil" class="rounded-circle me-3" width="40" height="40">
                                                <div>
                                                    <div class="fw-bold">
                                                        <a href="/Dashboard/VolunteerStats/@volunteer.Id" class="volunteer-link" style="color: #2c3e50; text-decoration: none; cursor: pointer;">
                                                            @volunteer.Nombre @volunteer.Apellido
                                                        </a>
                                                    </div>
                                                    <small class="text-muted">Voluntario</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@(volunteer.OrganizacionActual ?? "Sin organización")</td>
                                        <td>@(volunteer.Telefono ?? "N/A")</td>
                                        <td>@volunteer.Email</td>
                                        <td>@volunteer.Pais</td>
                                        <td>
                                            @{
                                                var statusClass = volunteer.Estado switch
                                                {
                                                    UserStatus.Activo => "bg-success",
                                                    UserStatus.Inactivo => "bg-secondary",
                                                    UserStatus.Suspendido => "bg-danger",
                                                    UserStatus.PendienteVerificacion => "bg-warning",
                                                    _ => "bg-secondary"
                                                };
                                                var statusText = volunteer.Estado switch
                                                {
                                                    UserStatus.Activo => "Activo",
                                                    UserStatus.Inactivo => "Inactivo",
                                                    UserStatus.Suspendido => "Suspendido",
                                                    UserStatus.PendienteVerificacion => "Pendiente",
                                                    _ => "Desconocido"
                                                };
                                            }
                                            <span class="badge @statusClass rounded-pill">@statusText</span>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center text-muted">
                                        <div class="py-4">
                                            <i class="bi bi-database" style="font-size: 2rem;"></i>
                                            <div class="mt-2">No hay voluntarios disponibles</div>
                                            <small>@(hasStats ? "Conectado con el backend" : "Verificando conexión con el servidor")</small>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <div class="text-muted" id="paginationInfo">
                        @if (hasVolunteers)
                        {
                            var startItem = ((currentPage - 1) * pageSize) + 1;
                            var endItem = Math.Min(currentPage * pageSize, volunteersData.TotalCount);
                            @:Mostrando @startItem-@endItem de @volunteersData.TotalCount voluntarios
                        }
                        else
                        {
                            @:No hay datos disponibles
                        }
                    </div>
                    @if (hasVolunteers && volunteersData.TotalPages > 1)
                    {
                        <nav aria-label="Paginación de voluntarios">
                            <ul class="pagination mb-0" id="volunteersPagination">
                                <li class="page-item @(volunteersData.HasPreviousPage ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("Reportes", new { page = currentPage - 1, pageSize = pageSize, search = searchQuery })">Anterior</a>
                                </li>
                                @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(volunteersData.TotalPages, currentPage + 2); i++)
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Reportes", new { page = i, pageSize = pageSize, search = searchQuery })">@i</a>
                                    </li>
                                }
                                <li class="page-item @(volunteersData.HasNextPage ? "" : "disabled")">
                                    <a class="page-link" href="@Url.Action("Reportes", new { page = currentPage + 1, pageSize = pageSize, search = searchQuery })">Siguiente</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles for Reportes Page -->
<style>
/* Back Button Styles */
.back-btn {
    background: linear-gradient(135deg, #7db9e8, #5a9bd4);
    border: none;
    color: white;
    font-weight: 600;
    padding: 12px 24px;
    border-radius: 25px;
    box-shadow: 0 4px 15px rgba(125, 185, 232, 0.3);
    transition: all 0.3s ease;
    text-decoration: none;
}

.back-btn:hover {
    background: linear-gradient(135deg, #5a9bd4, #4a8bc4);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(125, 185, 232, 0.4);
}

/* Search Input Styles */
.search-input:focus {
    border-color: #7db9e8 !important;
    box-shadow: 0 4px 15px rgba(125, 185, 232, 0.2) !important;
    outline: none;
}

.search-input:focus + .search-icon {
    color: #5a9bd4 !important;
}

.clear-btn:hover {
    color: #dc3545 !important;
}

/* Table Styles */
.volunteers-table {
    font-size: 0.9rem;
    border-radius: 12px;
    overflow: hidden;
}

.volunteers-table th {
    font-weight: 600;
    color: #495057;
    border-bottom: 2px solid #e9ecef;
    padding: 20px 16px;
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
}

.volunteers-table td {
    padding: 16px;
    vertical-align: middle;
    border-bottom: 1px solid #f1f3f4;
}

.volunteers-table tbody tr {
    transition: all 0.3s ease;
}

.volunteers-table tbody tr:hover {
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.05);
}

.volunteer-row {
    cursor: pointer;
}

.volunteer-row:hover {
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
}

/* Badge Styles */
.badge {
    padding: 8px 12px;
    border-radius: 20px;
    font-weight: 500;
    font-size: 0.8rem;
}

.badge.bg-success {
    background: linear-gradient(135deg, #28a745, #20c997) !important;
}

.badge.bg-warning {
    background: linear-gradient(135deg, #ffc107, #fd7e14) !important;
    color: #212529 !important;
}

.badge.bg-info {
    background: linear-gradient(135deg, #17a2b8, #6f42c1) !important;
}

/* Pagination Styles */
.pagination .page-link {
    border: none;
    color: #6c757d;
    padding: 10px 16px;
    margin: 0 2px;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.pagination .page-link:hover {
    background: linear-gradient(135deg, #7db9e8, #5a9bd4);
    color: white;
    transform: translateY(-1px);
}

.pagination .page-item.active .page-link {
    background: linear-gradient(135deg, #7db9e8, #5a9bd4);
    color: white;
    box-shadow: 0 4px 12px rgba(125, 185, 232, 0.3);
}

.pagination .page-item.disabled .page-link {
    color: #adb5bd;
    background: #f8f9fa;
}
    background: #f8f9fa;
}

.volunteers-table td {
    padding: 16px 12px;
    vertical-align: middle;
    border-bottom: 1px solid #f8f9fa;
}

.volunteers-table tbody tr:hover {
    background: #f8f9fa;
    transition: background-color 0.2s ease;
}

/* Badge Styles */
.badge {
    font-size: 0.75rem;
    padding: 6px 12px;
    font-weight: 500;
}

.badge.bg-success {
    background-color: #28a745 !important;
}

.badge.bg-danger {
    background-color: #dc3545 !important;
}

/* Search Box Styles */
.form-control:focus {
    border-color: #7db9e8;
    box-shadow: 0 0 0 0.2rem rgba(125, 185, 232, 0.25);
}

/* Pagination Styles */
.pagination .page-link {
    border: 1px solid #e9ecef;
    color: #6c757d;
    padding: 8px 12px;
    margin: 0 2px;
    border-radius: 6px;
}

.pagination .page-link:hover {
    background-color: #7db9e8;
    border-color: #7db9e8;
    color: white;
}

.pagination .page-item.active .page-link {
    background-color: #7db9e8;
    border-color: #7db9e8;
    color: white;
}

/* Pagination interaction styles */
.pagination .page-link {
    cursor: pointer;
    transition: all 0.2s ease;
}

.pagination .page-item.disabled .page-link {
    cursor: not-allowed;
    opacity: 0.6;
}

/* Volunteer Link Styles */
.volunteer-link:hover {
    color: #7db9e8 !important;
    text-decoration: underline !important;
    transition: all 0.2s ease;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Volunteer row click handler for navigation
    const volunteerRows = document.querySelectorAll('.volunteer-row');
    volunteerRows.forEach(row => {
        row.addEventListener('click', function(e) {
            // Don't navigate if clicking on links
            if (e.target.closest('a')) {
                return;
            }
            
            // Navigate to volunteer details page
            const volunteerId = this.getAttribute('data-volunteer-id');
            if (volunteerId) {
                window.location.href = `/Dashboard/VolunteerStats/${volunteerId}`;
            }
        });
    });
});
</script> 