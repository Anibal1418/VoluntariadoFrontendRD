@using VoluntariosConectadosRD.Models.DTOs
@{
    ViewData["Title"] = "Gestión de ONGs - Administración";
    Layout = "_DashboardLayout";
    var organizationsData = ViewBag.OrganizationsData as PaginatedResult<AdminOrganizationDto>;
    var currentPage = ViewBag.CurrentPage ?? 1;
    var pageSize = ViewBag.PageSize ?? 10;
    var searchQuery = ViewBag.SearchQuery as string ?? "";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="dashboard-title mb-0" style="font-size:2.2rem; font-weight:700; color:#fff; background:linear-gradient(135deg, #28a745, #20c997); border-radius:12px; padding:18px 32px; box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);">GESTIÓN DE ONGs</h2>
    </div>

    <!-- Search and Actions Row -->
    <div class="card border-0 shadow-sm mb-4" style="border-radius: 15px;">
        <div class="card-body p-4">
            <form method="get" asp-action="ONGAdmin" class="row align-items-center">
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="pageSize" value="@pageSize" />
                <div class="col-md-6 mb-3 mb-md-0">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" name="search" value="@searchQuery" placeholder="Buscar ONGs por nombre, RNC o ubicación..." style="border-radius: 0 8px 8px 0;">
                    </div>
                </div>
                <div class="col-md-6 text-md-end">
                    <button type="submit" class="btn btn-outline-primary me-2">
                        <i class="bi bi-search me-2"></i>Buscar
                    </button>
                    <button type="button" class="btn btn-success me-2" onclick="exportarONGs()">
                        <i class="bi bi-download me-2"></i>Exportar
                    </button>
                    <button type="button" class="btn btn-primary" onclick="agregarONG()">
                        <i class="bi bi-building-add me-2"></i>Agregar ONG
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- ONGs Table -->
    <div class="card border-0 shadow-sm" style="border-radius: 15px;">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="ongsTable">
                    <thead class="table-success">
                        <tr>
                            <th style="border-radius: 15px 0 0 0;">
                                <input type="checkbox" class="form-check-input" id="selectAll">
                            </th>
                            <th>ONG</th>
                            <th>RNC</th>
                            <th>Contacto</th>
                            <th>Ubicación</th>
                            <th>Estado</th>
                            <th>Eventos</th>
                            <th>Fecha Registro</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (organizationsData?.Items?.Any() == true)
                        {
                            @foreach (var org in organizationsData.Items)
                            {
                                <tr>
                                    <td><input type="checkbox" class="form-check-input ong-checkbox" data-org-id="@org.Id"></td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(org.LogoUrl))
                                            {
                                                <img src="@org.LogoUrl" alt="Logo ONG" class="rounded me-3" width="50" height="50" style="object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                    <i class="bi bi-building text-muted" style="font-size: 1.5rem;"></i>
                                                </div>
                                            }
                                            <div>
                                                <div class="fw-bold">@org.Nombre</div>
                                                <small class="text-muted">@(!string.IsNullOrEmpty(org.TipoOrganizacion) ? org.TipoOrganizacion : "Sin categoría")</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@(!string.IsNullOrEmpty(org.NumeroRegistro) ? org.NumeroRegistro : "N/A")</td>
                                    <td>
                                        <div>
                                            <div>@(!string.IsNullOrEmpty(org.Email) ? org.Email : "Sin email")</div>
                                            <small class="text-muted">@(!string.IsNullOrEmpty(org.Telefono) ? org.Telefono : "Sin teléfono")</small>
                                        </div>
                                    </td>
                                    <td>@(!string.IsNullOrEmpty(org.Direccion) ? org.Direccion : "No especificada")</td>
                                    <td>
                                        @{
                                            var (statusClass, statusText) = org.Estado switch
                                            {
                                                UserStatus.Activo => ("bg-success", "Activa"),
                                                UserStatus.Inactivo => ("bg-secondary", "Inactiva"),
                                                UserStatus.Suspendido => ("bg-danger", "Suspendida"),
                                                UserStatus.PendienteVerificacion => ("bg-warning", "Pendiente"),
                                                _ => ("bg-secondary", "Desconocido")
                                            };
                                        }
                                        <span class="badge @statusClass">@statusText</span>
                                    </td>
                                    <td><span class="badge bg-primary">@org.TotalOportunidades eventos</span></td>
                                    <td>@org.FechaRegistro.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-outline-primary" onclick="editarONG(@org.Id)">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            @if (org.Estado == UserStatus.PendienteVerificacion) // Pendiente verificación
                                            {
                                                <button class="btn btn-sm btn-outline-success" onclick="aprobarONG(@org.Id)">
                                                    <i class="bi bi-check-circle"></i>
                                                </button>
                                            }
                                            else if (org.Estado == UserStatus.Activo) // Activa
                                            {
                                                <button class="btn btn-sm btn-outline-warning" onclick="verificarONG(@org.Id)">
                                                    <i class="bi bi-shield-check"></i>
                                                </button>
                                            }
                                            else if (org.Estado == UserStatus.Suspendido) // Suspendida
                                            {
                                                <button class="btn btn-sm btn-outline-success" onclick="reactivarONG(@org.Id)">
                                                    <i class="bi bi-arrow-clockwise"></i>
                                                </button>
                                            }
                                            <button class="btn btn-sm btn-outline-danger" onclick="eliminarONG(@org.Id)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center py-4">
                                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage as string))
                                    {
                                        <div class="text-danger">
                                            <i class="bi bi-exclamation-triangle me-2"></i>@ViewBag.ErrorMessage
                                        </div>
                                    }
                                    else if (!string.IsNullOrEmpty(searchQuery))
                                    {
                                        <div class="text-muted">
                                            <i class="bi bi-search me-2"></i>No se encontraron organizaciones que coincidan con "@searchQuery"
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-muted">
                                            <i class="bi bi-building me-2"></i>No hay organizaciones registradas en el sistema
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if (organizationsData != null && organizationsData.TotalCount > 0)
    {
        <div class="d-flex justify-content-between align-items-center mt-4">
            <div class="text-muted">
                @{
                    var startItem = ((currentPage - 1) * pageSize) + 1;
                    var endItem = Math.Min(currentPage * pageSize, organizationsData.TotalCount);
                }
                Mostrando @startItem-@endItem de @organizationsData.TotalCount organizaciones
                @if (!string.IsNullOrEmpty(searchQuery))
                {
                    <text> (filtrado por "@searchQuery")</text>
                }
            </div>
            
            @if (organizationsData.TotalPages > 1)
            {
                <nav aria-label="Paginación de ONGs">
                    <ul class="pagination mb-0">
                        <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ONGAdmin", new { page = currentPage - 1, pageSize = pageSize, search = searchQuery })">Anterior</a>
                        </li>
                        
                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(organizationsData.TotalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("ONGAdmin", new { page = i, pageSize = pageSize, search = searchQuery })">@i</a>
                            </li>
                        }
                        
                        @if (currentPage < organizationsData.TotalPages - 2)
                        {
                            <li class="page-item">
                                <span class="page-link">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("ONGAdmin", new { page = organizationsData.TotalPages, pageSize = pageSize, search = searchQuery })">@organizationsData.TotalPages</a>
                            </li>
                        }
                        
                        <li class="page-item @(currentPage >= organizationsData.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ONGAdmin", new { page = currentPage + 1, pageSize = pageSize, search = searchQuery })">Siguiente</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    }
</div>

<style>
    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.9rem;
    }
    
    .table td {
        vertical-align: middle;
        border-top: 1px solid #f8f9fa;
    }
    
    .table tbody tr:hover {
        background-color: #f8f9fa;
    }
    
    .btn-group .btn {
        border-radius: 6px;
        margin: 0 1px;
    }
    
    .pagination .page-link {
        border-radius: 8px;
        margin: 0 2px;
        border: none;
        color: #6c757d;
        font-weight: 500;
    }
    
    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #28a745, #20c997);
        border: none;
    }
</style>

<script>
    // Select all functionality
    document.getElementById('selectAll').addEventListener('change', function() {
        const checkboxes = document.querySelectorAll('.ong-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
        });
    });

    function editarONG(id) {
        // Redirect to organization profile/edit page
        window.location.href = '/Dashboard/OrganizationDetails/' + id;
    }

    async function verificarONG(id) {
        if (confirm('¿Está seguro de que desea verificar esta ONG?')) {
            try {
                const response = await fetch(`/api/Admin/organizations/${id}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: 1 }) // 1 = Activa (verificada)
                });

                if (response.ok) {
                    alert('ONG verificada exitosamente');
                    location.reload(); // Reload page to update status
                } else {
                    alert('Error al verificar ONG');
                }
            } catch (error) {
                alert('Error de conexión al verificar ONG');
            }
        }
    }

    async function aprobarONG(id) {
        if (confirm('¿Está seguro de que desea aprobar esta ONG?')) {
            try {
                const response = await fetch(`/api/Admin/organizations/${id}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: 1 }) // 1 = Activa (aprobada)
                });

                if (response.ok) {
                    alert('ONG aprobada exitosamente');
                    location.reload(); // Reload page to update status
                } else {
                    alert('Error al aprobar ONG');
                }
            } catch (error) {
                alert('Error de conexión al aprobar ONG');
            }
        }
    }

    async function reactivarONG(id) {
        if (confirm('¿Está seguro de que desea reactivar esta ONG?')) {
            try {
                const response = await fetch(`/api/Admin/organizations/${id}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: 1 }) // 1 = Activa
                });

                if (response.ok) {
                    alert('ONG reactivada exitosamente');
                    location.reload(); // Reload page to update status
                } else {
                    alert('Error al reactivar ONG');
                }
            } catch (error) {
                alert('Error de conexión al reactivar ONG');
            }
        }
    }

    async function eliminarONG(id) {
        if (confirm('¿Está seguro de que desea eliminar esta ONG? Esta acción no se puede deshacer.')) {
            try {
                const response = await fetch(`/api/Admin/organizations/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert('ONG eliminada exitosamente');
                    location.reload(); // Reload page to remove organization
                } else {
                    alert('Error al eliminar ONG');
                }
            } catch (error) {
                alert('Error de conexión al eliminar ONG');
            }
        }
    }

    function agregarONG() {
        // Redirect to organization registration
        window.location.href = '/Account/RegistroONG';
    }

    function exportarONGs() {
        // Download organizations as CSV/Excel
        const searchQuery = '@(ViewBag.SearchQuery ?? "")';
        let url = '/Admin/ExportOrganizations';
        if (searchQuery) {
            url += '?search=' + encodeURIComponent(searchQuery);
        }
        window.open(url, '_blank');
    }
</script> 
