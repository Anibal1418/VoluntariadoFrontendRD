@using VoluntariosConectadosRD.Models.DTOs
@{
    ViewData["Title"] = "Mi Perfil - Voluntariado Conectado RD";
    Layout = "_DashboardLayout";
    var userProfile = ViewBag.UserProfile as UserProfileDto;
    var userInfo = ViewBag.UserInfo as UserInfoDto;
    var hasProfile = userProfile != null;
}

<div class="dashboard-bg py-4" style="background:#f6f8fa; min-height:100vh;">
    <div class="container">
        <h2 class="dashboard-title mb-4" style="font-size:2.2rem; font-weight:700; color:#fff; background:#7db9e8; border-radius:12px; padding:18px 32px;">MI PERFIL</h2>

        <!-- Action Buttons -->
        <div class="d-flex justify-content-end mb-4 gap-3">
            <a href="/Account/EditarVoluntario/@(userInfo?.Id ?? 1)" class="btn btn-outline-primary btn-lg" style="border-radius: 12px; padding: 15px 30px; font-weight: 600; font-size: 1.1rem; box-shadow: 0 4px 12px rgba(13, 110, 253, 0.2); transition: all 0.3s ease; text-decoration: none; border: 2px solid #0d6efd; color: #0d6efd;">
                <i class="bi bi-pencil-square me-2"></i>
                Editar Perfil
            </a>
            <button class="btn btn-primary btn-lg reportes-btn" style="border-radius: 12px; padding: 15px 30px; font-weight: 600; font-size: 1.1rem; box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3); transition: all 0.3s ease; text-decoration: none; border: none; background: linear-gradient(135deg, #0d6efd, #0b5ed7);" disabled>
                <i class="bi bi-graph-up me-2"></i>
                Ver Reportes
            </button>
        </div>

        <div class="row g-4 mb-4">
            <!-- Profile Card -->
            <div class="col-lg-4 col-md-6">
                <div class="card h-100 p-3" style="border-radius:16px;">
                    <div class="d-flex flex-column align-items-center">
                        <form enctype="multipart/form-data" id="uploadPhotoForm">
                            <label for="profilePhoto" class="mb-2" style="cursor:pointer;">
                                <img src="@(userProfile?.ProfileImageUrl ?? "/images/default-avatar.jpg")" alt="Foto de perfil" class="rounded-circle mb-2" width="80" height="80">
                                <div class="btn btn-outline-secondary btn-sm" style="margin-left: 10px;">Subir foto</div>
                            </label>
                            <input type="file" id="profilePhoto" name="profilePhoto" accept="image/*" style="display:none;" onchange="document.getElementById('uploadPhotoForm').submit();">
                        </form>
                        <div class="mt-2 w-100">
                            <div class="card border" style="border-radius:16px; padding:10px; margin-top: 10px;">
                                <div class="mb-1"><strong>Tu nombre</strong></div>
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <span>@(hasProfile ? userProfile.Nombre + " " + userProfile.Apellido : userInfo?.Nombre + " " + userInfo?.Apellido)</span>
                                    <button class="btn btn-link p-0 ms-2"><i class="bi bi-pencil-square"></i> Editar</button>
                                </div>
                                <div class="mb-1"><strong>Correo Electrónico</strong></div>
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <span>@(hasProfile ? userProfile.Email : userInfo?.Email)</span>
                                    <button class="btn btn-link p-0 ms-2"><i class="bi bi-pencil-square"></i> Editar</button>
                                </div>
                                <div class="mb-1"><strong>Número</strong></div>
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <span>@(hasProfile ? userProfile.Telefono ?? "No especificado" : userInfo?.Telefono ?? "No especificado")</span>
                                    <button class="btn btn-link p-0 ms-2"><i class="bi bi-pencil-square"></i> Editar</button>
                                </div>
                            </div>
                            <div class="card border" style="border-radius:16px; padding:10px; margin-top: 10px;">
                                <div class="mb-1"><strong>Biografía</strong></div>
                                <div class="d-flex align-items-start justify-content-between mb-2">
                                    <span class="p-1" style="flex: 1; max-width: calc(100% - 80px);">@(hasProfile && !string.IsNullOrEmpty(userProfile.Biografia) ? userProfile.Biografia : "Agrega una biografía para contar más sobre ti.")</span>
                                    <button class="btn btn-link p-0 flex-shrink-0"><i class="bi bi-pencil-square"></i> Editar</button>
                                </div>
                            </div>
                            <div class="card border" style="border-radius:16px; padding:10px; margin-top: 10px;">
                                <div class="mb-1"><strong>Disponibilidad</strong></div>
                                <div class="d-flex align-items-center justify-content-between">
                                    <span style="margin-left: 10px;">@(hasProfile && !string.IsNullOrEmpty(userProfile.Disponibilidad) ? userProfile.Disponibilidad : "No especificada")</span>
                                    <button class="btn btn-outline-success btn-sm ms-2">@(hasProfile && !string.IsNullOrEmpty(userProfile.Disponibilidad) ? userProfile.Disponibilidad : "Por definir")</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Volunteer Characteristics Card -->
            <div class="col-lg-4 col-md-6">
                <div class="card h-100 p-3" style="border-radius:16px;">
                    <div class="card mt-2" style="border-radius: 12px; border: 1px solid #e9ecef;">
                        <div class="d-flex flex-column align-items-left justify-content-between" style="margin-top: 10px; margin-left: 10px;">
                            <strong style="font-size: 0.9rem;">Características del Voluntario</strong>
                            <div class="p-2" style="font-size:0.8rem; color:#888;">Información esencial sobre la disposición, habilidades y conocimientos del participante.</div>
                        </div>
                    </div><br>
                    <div class="mb-3">
                        <strong>Habilidades</strong>
                        <div class="mt-2">
                            @if (hasProfile && userProfile.Habilidades.Any())
                            {
                                @foreach (var habilidad in userProfile.Habilidades)
                                {
                                    <span class="badge bg-light text-dark border me-1 mb-1" style="margin: 5px;">@habilidad</span>
                                }
                            }
                            else
                            {
                                <span class="text-muted small">Agrega habilidades para mostrar tus fortalezas</span>
                            }
                        </div>
                    </div>

                    <div class="mb-3">
                        <strong>Experiencia</strong>
                        <div class="card mt-2" style="border-radius: 12px; border: 1px solid #e9ecef;">
                            <div class="d-flex align-items-center justify-content-between p-3">
                                <div>
                                    <span class="fw-bold">@(hasProfile ? userProfile.ExperienciaAnios : 0) años</span><br>
                                    <span style="font-size:0.9rem; color:#888;"> de experiencia total</span>
                                </div>
                                <div class="bg-warning rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="bi bi-star-fill text-white"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <strong>Reseñas</strong>
                        <div class="card mt-2" style="border-radius: 12px; border: 1px solid #e9ecef;">
                            <div class="d-flex align-items-center justify-content-between p-3">
                                <div>
                                    <span class="fw-bold">@(hasProfile ? userProfile.TotalResenas : 0) reseñas</span><br>
                                    <span style="font-size:0.9rem; color:#888;">Calificación: @(hasProfile ? userProfile.CalificacionPromedio.ToString("F1") : "0.0")/5</span>
                                </div>
                                <div class="bg-warning rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="bi bi-star-fill text-white"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (hasProfile && userProfile.UltimasResenas.Any())
                    {
                        <div class="mb-3">
                            <strong>Reseñas recientes</strong>
                            @foreach (var resena in userProfile.UltimasResenas.Take(2))
                            {
                                <div class="card mt-2" style="border-radius: 12px; border: 1px solid #e9ecef;">
                                    <div class="p-3">
                                        <div class="fw-bold mb-1" style="color: #0d6efd;">@resena.OrganizacionNombre</div>
                                        <div class="mb-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="bi bi-star@(i <= resena.Calificacion ? "-fill" : "") text-warning"></i>
                                            }
                                        </div>
                                        @if (!string.IsNullOrEmpty(resena.Comentario))
                                        {
                                            <div style="font-size:0.95rem; color:#666;">@resena.Comentario</div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                        @* Future feature: View all reviews *@
                    }
                    else
                    {
                        <div class="text-muted small">No hay reseñas aún</div>
                    }
                </div>
            </div>

            <!-- Activity History Card -->
            <div class="col-lg-4 col-md-12">
                <div class="card h-100 p-3" style="border-radius:16px;">
                    <div class="card mt-2" style="border-radius: 12px; border: 1px solid #e9ecef;">
                        <div class="d-flex flex-column align-items-left justify-content-between" style="margin-top: 10px; margin-left: 10px;">
                            <strong style="font-size: 0.9rem;">Historial de Actividades</strong>
                            <div class="p-2" style="font-size:0.8rem; color:#888;">Últimas participaciones y logros obtenidos.</div>
                        </div>
                    </div><br>

                    <div class="mb-3">
                        <strong>Participaciones Recientes</strong>
                        <div class="mt-2">
                            @{
                                var recentActivities = ViewBag.RecentActivities as IEnumerable<RecentActivityDto>;
                            }
                            @if (recentActivities != null && recentActivities.Any())
                            {
                                @foreach (var activity in recentActivities.Take(3))
                                {
                                    <div class="card mb-2" style="border-radius: 8px; border: 1px solid #e9ecef;">
                                        <div class="d-flex align-items-center p-2">
                                            @if (activity.ActivityType == "applied")
                                            {
                                                <i class="bi bi-plus-circle me-2" style="color: #0d6efd; font-size: 1.1rem;"></i>
                                            }
                                            else if (activity.ActivityType == "approved")
                                            {
                                                <i class="bi bi-check-circle me-2" style="color: #198754; font-size: 1.1rem;"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-heart me-2" style="color: #dc3545; font-size: 1.1rem;"></i>
                                            }
                                            <div class="flex-grow-1">
                                                <div class="fw-bold">@activity.OrganizationName</div>
                                                <div style="font-size:0.85rem; color:#888;">@activity.OpportunityTitle</div>
                                            </div>
                                            <span class="badge bg-light text-dark border">@activity.Date.ToString("MMM yyyy")</span>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-muted small">No hay actividades recientes aún</div>
                            }
                        </div>
                        @* Future feature: View complete history *@
                    </div>

                    <div class="mt-3">
                        <strong>Logros/Badges</strong>
                        <div class="d-flex flex-wrap gap-2 mt-2">
                            @if (hasProfile && userProfile.Badges.Any())
                            {
                                @foreach (var badge in userProfile.Badges)
                                {
                                    <div class="badge bg-@badge.Color d-flex flex-column align-items-center justify-content-center text-wrap" style="width: 80px; height: 80px; border-radius: 12px; font-size: 0.65rem; line-height: 1;" title="@badge.Descripcion">
                                        @if (!string.IsNullOrEmpty(badge.IconoUrl))
                                        {
                                            <img src="@badge.IconoUrl" alt="@badge.Nombre" class="mb-1" style="width: 20px; height: 20px;" />
                                        }
                                        else
                                        {
                                            <i class="bi bi-star text-white mb-1"></i>
                                        }
                                        <span class="text-white text-center">@badge.Nombre.ToUpper()</span>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-muted small">Comienza a participar en eventos para ganar badges</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Calendar Section -->
        <div class="card p-4" style="border-radius:16px;">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="mb-0" style="font-weight:700;">Mis eventos</h3>
                <div class="d-flex gap-2">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-primary view-btn" data-view="list">
                            <i class="bi bi-list-ul me-1"></i>Eventos
                        </button>
                        <button type="button" class="btn btn-outline-secondary view-btn" data-view="month">
                            <i class="bi bi-calendar-month me-1"></i>Mes
                        </button>
                        <button type="button" class="btn btn-outline-secondary view-btn" data-view="week">
                            <i class="bi bi-calendar-week me-1"></i>Semana
                        </button>
                        <button type="button" class="btn btn-outline-secondary view-btn" data-view="day">
                            <i class="bi bi-calendar-day me-1"></i>Día
                        </button>
                    </div>
                    <div class="btn-group ms-3" role="group">
                        <button class="btn btn-outline-secondary btn-sm prev-btn">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                        <button class="btn btn-outline-secondary btn-sm next-btn">
                            <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- List View (Default) -->
            <div class="calendar-list-view">
                <div class="row">
                    @{
                        var userEvents = ViewBag.UserEvents as IEnumerable<UserEventDto>;
                    }
                    @if (userEvents != null && userEvents.Any())
                    {
                        @foreach (var userEvent in userEvents)
                        {
                            var statusBadgeClass = userEvent.Status == "Aceptada" ? "bg-success" : 
                                                  userEvent.Status == "Pendiente" ? "bg-warning" : "bg-secondary";
                            var eventStatus = userEvent.Status == "Aceptada" ? "Aceptado" : 
                                            userEvent.Status == "Pendiente" ? "Pendiente" : "Rechazado";
                            var dateFormatted = userEvent.Date.ToString("MMM d", new System.Globalization.CultureInfo("es-ES")).ToUpper();
                            
                            <div class="col-md-6 col-lg-4 mb-4">
                                <div class="card h-100 event-card">
                                    <div class="event-card-image" style="background-image: url('@(userEvent.ImageUrl ?? "https://images.unsplash.com/photo-1527525443983-6e60c75fff46?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60")');">
                                        <div class="event-card-date">@dateFormatted</div>
                                        <span class="event-status-badge @statusBadgeClass text-white">@eventStatus</span>
                                    </div>
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title">@userEvent.Title</h5>
                                        <p class="card-text text-muted mb-2">@userEvent.OrganizationName</p>
                                        <p class="card-text small text-muted"><i class="bi bi-calendar-event me-1"></i> @userEvent.Date.ToString("d 'de' MMMM, yyyy", new System.Globalization.CultureInfo("es-ES"))</p>
                                        <p class="card-text small text-muted"><i class="bi bi-geo-alt me-1"></i> @userEvent.Location</p>
                                        <div class="mt-auto">
                                            <button class="btn btn-primary w-100 details-btn" data-event-id="@userEvent.Id">
                                                <i class="bi bi-eye me-1"></i>Ver Detalles
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12 text-center">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i>
                                No tienes eventos programados actualmente. ¡Aplica a oportunidades de voluntariado para comenzar!
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Month View -->
            <div class="calendar-month-view d-none">
                <div class="text-muted mb-3" style="font-size: 1.1rem;">@DateTime.Now.ToString("MMMM yyyy", new System.Globalization.CultureInfo("es-ES"))</div>
                <div class="calendar-container">
                    <div class="calendar-header">
                        <div class="calendar-day-header">DOM</div>
                        <div class="calendar-day-header">LUN</div>
                        <div class="calendar-day-header">MAR</div>
                        <div class="calendar-day-header">MIÉ</div>
                        <div class="calendar-day-header">JUE</div>
                        <div class="calendar-day-header">VIE</div>
                        <div class="calendar-day-header">SÁB</div>
                    </div>

                    <div class="calendar-grid" id="calendar-grid">
                        <!-- Calendar will be populated by JavaScript for better dynamic rendering -->
                    </div>
                </div>
            </div>

            <!-- Week View -->
            <div class="calendar-week-view d-none">
                <div class="text-muted mb-3" style="font-size: 1.1rem;" id="week-header">Esta semana</div>
                <div class="week-container" id="week-container">
                    @if (userEvents != null && userEvents.Any())
                    {
                        @foreach (var userEvent in userEvents.Where(e => e.Date >= DateTime.Now && e.Date <= DateTime.Now.AddDays(7)))
                        {
                            var statusBadgeClass = userEvent.Status == "Aceptada" ? "bg-success" : 
                                                  userEvent.Status == "Pendiente" ? "bg-warning" : "bg-secondary";
                            var eventStatus = userEvent.Status == "Aceptada" ? "Aceptado" : 
                                            userEvent.Status == "Pendiente" ? "Pendiente" : "Rechazado";
                            
                            <div class="week-day">
                                <div class="week-day-header">@userEvent.Date.ToString("dddd", new System.Globalization.CultureInfo("es-ES")).ToUpper()<br>@userEvent.Date.ToString("d MMM yyyy", new System.Globalization.CultureInfo("es-ES")).ToUpper()</div>
                                <div class="week-events">
                                    <div class="week-event">
                                        <div class="week-event-time">9:00 AM</div>
                                        <div class="week-event-content d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <div class="d-flex flex-wrap align-items-center">
                                                    <h5 class="mb-0 me-3">@userEvent.Title</h5>
                                                    <span class="badge @statusBadgeClass text-white me-2">@eventStatus</span>
                                                    <span class="text-muted small me-3"><i class="bi bi-geo-alt me-1"></i>@userEvent.Location</span>
                                                </div>
                                                <p class="mb-0 text-muted small">@userEvent.OrganizationName</p>
                                            </div>
                                            <button class="btn btn-primary btn-sm ms-3 details-btn" data-event-id="@userEvent.Id">
                                                <i class="bi bi-eye me-1"></i>Detalles
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center p-4">
                            <div class="alert alert-info">No hay eventos programados para esta semana.</div>
                        </div>
                    }
                </div>
            </div>

            <!-- Day View -->
            <div class="calendar-day-view d-none">
                <div class="text-muted mb-3" style="font-size: 1.1rem;" id="day-header">@DateTime.Now.ToString("dddd, d 'de' MMMM yyyy", new System.Globalization.CultureInfo("es-ES"))</div>
                <div class="day-events" id="day-events">
                    @{
                        var todayEvents = userEvents?.Where(e => e.Date.Date == DateTime.Now.Date);
                    }
                    @if (todayEvents != null && todayEvents.Any())
                    {
                        @foreach (var userEvent in todayEvents)
                        {
                            <div class="day-event-card">
                                <div class="day-event-time">9:00 AM - @(userEvent.EndDate.HasValue ? userEvent.EndDate.Value.ToString("h:mm tt") : "5:00 PM")</div>
                                <div class="day-event-content">
                                    <h5>@userEvent.Title</h5>
                                    <p class="text-muted mb-2">@userEvent.OrganizationName</p>
                                    <p class="small text-muted"><i class="bi bi-geo-alt me-1"></i> @userEvent.Location</p>
                                    <button class="btn btn-primary btn-sm mt-2 details-btn" data-event-id="@userEvent.Id">
                                        <i class="bi bi-eye me-1"></i>Ver Detalles
                                    </button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center p-4">
                            <div class="alert alert-info">No hay eventos programados para hoy.</div>
                        </div>
                    }
                </div>
            </div>

            <!-- Event Details Modal -->
            <div class="modal fade" id="eventModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content" style="border-radius:16px;">
                        <div class="modal-header">
                            <h5 class="modal-title">Detalles del Evento</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="event-modal-image" style="background-image: url('https://images.unsplash.com/photo-1527525443983-6e60c75fff46?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60');">
                                <span class="event-status-badge bg-success text-white">Próximo</span>
                            </div>
                            <h4 class="mt-3">Voluntariado DREAM</h4>
                            <p class="text-muted">Dominican Dream Project</p>

                            <div class="d-flex align-items-center my-3">
                                <i class="bi bi-calendar-event me-2"></i>
                                <span>1 de Julio, 2025</span>
                            </div>

                            <div class="d-flex align-items-center my-3">
                                <i class="bi bi-geo-alt me-2"></i>
                                <span>Santo Domingo, República Dominicana</span>
                            </div>

                            <div class="d-flex align-items-center my-3">
                                <i class="bi bi-clock me-2"></i>
                                <span>9:00 AM - 5:00 PM</span>
                            </div>

                            <div class="mt-4 event-description">
                                <h6>Descripción</h6>
                                <p class="text-muted event-description-text"></p>
                            </div>

                            <div class="mt-4 event-requirements">
                                <h6>Requisitos</h6>
                                <ul class="text-muted event-requirements-list"></ul>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary">Confirmar Asistencia</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles for Dashboard -->
<style>
    .dashboard-title {
        letter-spacing: 1px;
    }

    .card {
        border: none;
        box-shadow: 0 2px 12px rgba(0,0,0,0.07);
    }

    /* Event Card Styles */
    .event-card {
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.12);
        }

    .event-card-image {
        height: 160px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .event-card-date {
        position: absolute;
        top: 10px;
        left: 10px;
        background: rgba(0,0,0,0.7);
        color: white;
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .event-status-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    /* Calendar Styles */
    .calendar-container {
        background: #f8f9fa;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .calendar-header {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        background: #7db9e8;
        color: white;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .calendar-day-header {
        padding: 12px 8px;
        text-align: center;
        border-right: 1px solid rgba(255,255,255,0.2);
    }

        .calendar-day-header:last-child {
            border-right: none;
        }

    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 1px;
        background: #e9ecef;
    }

    .calendar-day {
        background: white;
        min-height: 100px;
        padding: 8px;
        position: relative;
    }

        .calendar-day.empty {
            background: #f8f9fa;
        }

    .date-number {
        font-weight: 600;
        font-size: 0.9rem;
        color: #495057;
        margin-bottom: 4px;
    }

    .event-block {
        padding: 6px 8px;
        border-radius: 6px;
        margin-bottom: 4px;
        font-size: 0.8rem;
        line-height: 1.2;
        cursor: pointer;
    }

    .event-green {
        background: #d4edda;
        color: #155724;
        border-left: 3px solid #28a745;
    }

    .event-blue {
        background: #d1ecf1;
        color: #0c5460;
        border-left: 3px solid #17a2b8;
    }

    .event-yellow {
        background: #fff3cd;
        color: #856404;
        border-left: 3px solid #ffc107;
    }

    /* Week View Styles */
    .week-container {
        background: #f8f9fa;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .week-day {
        border-bottom: 1px solid #e9ecef;
    }

        .week-day:last-child {
            border-bottom: none;
        }

    .week-day-header {
        padding: 12px 16px;
        background: #7db9e8;
        color: white;
        font-weight: 600;
        font-size: 0.95rem;
    }

    .week-events {
        padding: 8px;
        background: white;
    }

    .week-event {
        display: flex;
        padding: 12px;
        margin-bottom: 12px;
        border-radius: 8px;
        background: #f8f9fa;
        align-items: center;
    }

    .week-event-time {
        min-width: 80px;
        font-weight: 500;
        font-size: 0.9rem;
        color: #495057;
    }

    .week-event-content {
        flex-grow: 1;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-left: 12px;
    }

        .week-event-content h5 {
            font-size: 1rem;
            margin-bottom: 0;
            margin-right: 12px;
        }

        .week-event-content .badge {
            margin-right: 12px;
        }

    /* Day View Styles */
    .day-events {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 16px;
    }

    .day-event-card {
        background: white;
        border-radius: 8px;
        padding: 16px;
        margin-bottom: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .day-event-time {
        font-weight: 500;
        color: #495057;
        margin-bottom: 8px;
    }

    /* Modal Styles */
    .event-modal-image {
        height: 180px;
        background-size: cover;
        background-position: center;
        border-radius: 12px;
        margin-bottom: 16px;
        position: relative;
    }

    /* View Buttons */
    .view-btn {
        padding: 8px 16px;
        font-size: 0.9rem;
        font-weight: 500;
        border-radius: 8px !important;
        transition: all 0.3s ease;
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .view-btn {
            padding: 6px 10px;
            font-size: 0.8rem;
        }

        .event-card-image {
            height: 120px;
        }

        .calendar-day-header {
            font-size: 0.7rem;
            padding: 8px 4px;
        }

        .week-event {
            flex-direction: column;
            align-items: flex-start;
        }

        .week-event-content {
            flex-direction: column;
            align-items: flex-start;
            margin-left: 0;
            margin-top: 8px;
        }

            .week-event-content .btn {
                margin-top: 8px;
                width: 100%;
            }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // View switching
        const viewButtons = document.querySelectorAll('.view-btn');
        const listView = document.querySelector('.calendar-list-view');
        const monthView = document.querySelector('.calendar-month-view');
        const weekView = document.querySelector('.calendar-week-view');
        const dayView = document.querySelector('.calendar-day-view');

        viewButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                viewButtons.forEach(btn => {
                    btn.classList.remove('btn-primary');
                    btn.classList.add('btn-outline-secondary');
                });

                // Add active class to clicked button
                this.classList.remove('btn-outline-secondary');
                this.classList.add('btn-primary');

                // Hide all views
                listView.classList.add('d-none');
                monthView.classList.add('d-none');
                weekView.classList.add('d-none');
                dayView.classList.add('d-none');

                // Show selected view
                const view = this.dataset.view;
                if (view === 'list') {
                    listView.classList.remove('d-none');
                } else if (view === 'month') {
                    monthView.classList.remove('d-none');
                } else if (view === 'week') {
                    weekView.classList.remove('d-none');
                } else if (view === 'day') {
                    dayView.classList.remove('d-none');
                }
            });
        });

        // Event details modal
        const detailsButtons = document.querySelectorAll('.details-btn');
        const eventModal = new bootstrap.Modal(document.getElementById('eventModal'));

        // Datos de los eventos dinámicos
        const eventsData = {
            @if (userEvents != null && userEvents.Any())
            {
                var eventIndex = 0;
                @foreach (var userEvent in userEvents)
                {
                    var description = (userEvent.Description ?? "Participa en esta increíble oportunidad de voluntariado y haz la diferencia en tu comunidad.").Replace("\"", "'").Replace("\n", " ").Replace("\r", "");
                    var requirements = string.IsNullOrEmpty(userEvent.Requirements) ? "Ganas de ayudar" : userEvent.Requirements.Replace("\"", "'").Replace("\n", " ").Replace("\r", "");
                    <text>
            @userEvent.Id: {
                title: "@userEvent.Title",
                organization: "@userEvent.OrganizationName",
                date: "@userEvent.Date.ToString("d 'de' MMMM, yyyy", new System.Globalization.CultureInfo("es-ES"))",
                time: "9:00 AM - @(userEvent.EndDate.HasValue ? userEvent.EndDate.Value.ToString("h:mm tt") : "5:00 PM")",
                location: "@userEvent.Location",
                image: "@(userEvent.ImageUrl ?? "https://images.unsplash.com/photo-1527525443983-6e60c75fff46?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60")",
                description: "@description",
                requirements: ["@requirements"]
            }@(eventIndex < userEvents.Count() - 1 ? "," : "")
                    </text>
                    eventIndex++;
                }
            }
        };

        detailsButtons.forEach(button => {
            button.addEventListener('click', function() {
                const eventId = this.dataset.eventId;
                const eventData = eventsData[eventId];

                // Actualizar el modal con los datos del evento específico
                document.querySelector('.event-modal-image').style.backgroundImage = `url('${eventData.image}')`;
                document.querySelector('.modal-body h4').textContent = eventData.title;
                document.querySelector('.modal-body p.text-muted').textContent = eventData.organization;

                // Actualizar detalles
                const details = document.querySelectorAll('.modal-body .d-flex.align-items-center.my-3');
                details[0].querySelector('span').textContent = eventData.date;
                details[1].querySelector('span').textContent = eventData.location;
                details[2].querySelector('span').textContent = eventData.time;

                // Actualizar descripción (texto gris)
                document.querySelector('.event-description-text').textContent = eventData.description;

                // Actualizar requisitos (texto gris)
                const requirementsList = document.querySelector('.event-requirements-list');
                requirementsList.innerHTML = '';
                eventData.requirements.forEach(req => {
                    requirementsList.innerHTML += `<li>${req}</li>`;
                });

                eventModal.show();
            });
        });

        // Calendar navigation
        const prevBtn = document.querySelector('.prev-btn');
        const nextBtn = document.querySelector('.next-btn');

        prevBtn.addEventListener('click', function() {
            console.log('Previous period');
        });

        nextBtn.addEventListener('click', function() {
            console.log('Next period');
        });
    });
</script>