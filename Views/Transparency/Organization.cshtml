@model VoluntariadoConectadoRD.Models.DTOs.OrganizationFinancialDetailsDto

@{
    ViewData["Title"] = $"Transparencia - {Model.Nombre}";
}

<div class="container my-5">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Transparencia</a></li>
            <li class="breadcrumb-item active">@Model.Nombre</li>
        </ol>
    </nav>

    <!-- Organization Header -->
    <div class="row mb-4">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-2 text-center">
                            @if (!string.IsNullOrEmpty(Model.LogoUrl))
                            {
                                <img src="@Model.LogoUrl" alt="@Model.Nombre" class="img-fluid rounded-circle" style="max-width: 120px; max-height: 120px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center mx-auto" style="width: 120px; height: 120px;">
                                    <i class="fas fa-building fa-3x text-white"></i>
                                </div>
                            }
                        </div>
                        <div class="col-md-8">
                            <h1 class="h2 mb-2">@Model.Nombre</h1>
                            @if (Model.Verificada)
                            {
                                <span class="badge bg-success mb-2">
                                    <i class="fas fa-check-circle"></i> Organización Verificada
                                </span>
                            }
                            @if (!string.IsNullOrEmpty(Model.TipoOrganizacion))
                            {
                                <span class="badge bg-secondary mb-2">@Model.TipoOrganizacion</span>
                            }
                            @if (!string.IsNullOrEmpty(Model.Descripcion))
                            {
                                <p class="text-muted">@Model.Descripcion</p>
                            }
                            @if (!string.IsNullOrEmpty(Model.Mision))
                            {
                                <p><strong>Misión:</strong> @Model.Mision</p>
                            }
                        </div>
                        <div class="col-md-2 text-center">
                            <div class="text-muted">
                                <small>Registrada</small><br>
                                <strong>@Model.FechaRegistro.ToString("MMM yyyy")</strong>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.SitioWeb))
                            {
                                <a href="@Model.SitioWeb" target="_blank" class="btn btn-outline-primary btn-sm mt-2">
                                    <i class="fas fa-external-link-alt"></i> Sitio Web
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Financial Summary -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <i class="fas fa-arrow-up fa-2x mb-2"></i>
                    <h4>@Model.ResumenFinanciero.TotalIngresosHistorico.ToString("C", new System.Globalization.CultureInfo("es-DO"))</h4>
                    <small>Total Ingresos Histórico</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-danger text-white">
                <div class="card-body text-center">
                    <i class="fas fa-arrow-down fa-2x mb-2"></i>
                    <h4>@Model.ResumenFinanciero.TotalGastosHistorico.ToString("C", new System.Globalization.CultureInfo("es-DO"))</h4>
                    <small>Total Gastos Histórico</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card @(Model.ResumenFinanciero.BalanceGeneral >= 0 ? "bg-primary" : "bg-warning") text-white">
                <div class="card-body text-center">
                    <i class="fas fa-balance-scale fa-2x mb-2"></i>
                    <h4>@Model.ResumenFinanciero.BalanceGeneral.ToString("C", new System.Globalization.CultureInfo("es-DO"))</h4>
                    <small>Balance General</small>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <i class="fas fa-chart-bar fa-2x mb-2"></i>
                    <h4>@Model.ResumenFinanciero.TotalReportes</h4>
                    <small>Reportes Publicados</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <div class="col-lg-4 mb-3">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-pie-chart text-danger me-2"></i>
                        Gastos por Categoría
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="expensesChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-3">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-heart text-success me-2"></i>
                        Ingresos por Tipo
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="incomeChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-3">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-line text-primary me-2"></i>
                        Tendencia Trimestral
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="trendChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Financial Reports -->
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-file-alt text-info me-2"></i>
                        Reportes Financieros (@Model.ReportesFinancieros.Count)
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.ReportesFinancieros.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Período</th>
                                        <th>Título</th>
                                        <th class="text-end">Ingresos</th>
                                        <th class="text-end">Gastos</th>
                                        <th class="text-end">Balance</th>
                                        <th>Fecha</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var report in Model.ReportesFinancieros.OrderByDescending(r => r.Año).ThenByDescending(r => r.Trimestre))
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-secondary">Q@report.Trimestre @report.Año</span>
                                            </td>
                                            <td>@report.Titulo</td>
                                            <td class="text-end text-success fw-bold">
                                                @report.TotalIngresos.ToString("C", new System.Globalization.CultureInfo("es-DO"))
                                            </td>
                                            <td class="text-end text-danger fw-bold">
                                                @report.TotalGastos.ToString("C", new System.Globalization.CultureInfo("es-DO"))
                                            </td>
                                            <td class="text-end @(report.Balance >= 0 ? "text-primary" : "text-warning") fw-bold">
                                                @report.Balance.ToString("C", new System.Globalization.CultureInfo("es-DO"))
                                            </td>
                                            <td>@report.FechaCreacion.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <a href="@Url.Action("Report", new { id = report.Id })" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-eye"></i> Ver Detalles
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-file-excel fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No hay reportes disponibles</h4>
                            <p class="text-muted">Esta organización aún no ha publicado reportes financieros.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Expenses by Category Chart
        const expensesData = @Html.Raw(Json.Serialize(Model.GastosCategoria));
        if (expensesData.labels.length > 0) {
            const expensesCtx = document.getElementById('expensesChart').getContext('2d');
            new Chart(expensesCtx, {
                type: 'doughnut',
                data: {
                    labels: expensesData.labels,
                    datasets: [{
                        data: expensesData.values,
                        backgroundColor: [
                            '#ff6384', '#36a2eb', '#ffce56', '#4bc0c0', '#9966ff', '#ff9f40'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'bottom' }
                    }
                }
            });
        }

        // Income by Type Chart
        const incomeData = @Html.Raw(Json.Serialize(Model.IngresosTipo));
        if (incomeData.labels.length > 0) {
            const incomeCtx = document.getElementById('incomeChart').getContext('2d');
            new Chart(incomeCtx, {
                type: 'pie',
                data: {
                    labels: incomeData.labels,
                    datasets: [{
                        data: incomeData.values,
                        backgroundColor: [
                            '#28a745', '#17a2b8', '#ffc107', '#dc3545', '#6f42c1', '#fd7e14'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'bottom' }
                    }
                }
            });
        }

        // Quarterly Trend Chart
        const trendData = @Html.Raw(Json.Serialize(Model.TendenciaTrimestral));
        if (trendData.labels.length > 0) {
            const trendCtx = document.getElementById('trendChart').getContext('2d');
            new Chart(trendCtx, {
                type: 'line',
                data: {
                    labels: trendData.labels,
                    datasets: [{
                        label: 'Balance Trimestral',
                        data: trendData.values,
                        borderColor: '#007bff',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return 'RD$' + value.toLocaleString();
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        }
    </script>
}

@section Styles {
    <style>
        canvas {
            max-height: 300px !important;
        }
    </style>
}